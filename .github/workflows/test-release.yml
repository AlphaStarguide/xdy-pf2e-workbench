name: Test and release

# Run the workflow when a Pull Request is opened or when changes are pushed to main on 'xdy/xdy-pf2e-workbench' (i.e. don't run on forks)
on:
  pull_request:
  push:
    branches: [ main ]

#TODO Parse out fvtt_minimum and fvtt_verified from the module.json, for now they're hardcoded.
env:
  fvtt_minimum: 11.314
  fvtt_verified: 11.315

jobs:
  release:
    # Only release on push to main on xdy/xdy-pf2e-workbench
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main') && github.repository == 'xdy/xdy-pf2e-workbench'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: 'true'

        # Not sure this is the right way to do it, but, eh, it works.
      - name: Pull & update submodules recursively
        run: |
          git submodule update --init --recursive
          git submodule update --recursive --remote

      - uses: stefanzweifel/git-auto-commit-action@v5.0.0
        with:
          commit_message: "chore: Update submodules"

      - name: Setup Node.js
        uses: actions/setup-node@v4.0.1
        with:
          node-version: 18.x
          cache: 'npm'

      - name: Install
        run: npm install

      - name: install fvtt cli
        id: fvtt-install
        run: npm install -g @foundryvtt/foundryvtt-cli

      - name: Build packs
        run: npm run build:packs

      - name: Build
        run: npm run build

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npx semantic-release

  #      - name: Install playwright
  #        run: npx playwright install

  #      - name: Install foundry-publish
  #        run: npm install -g @ghost-fvtt/foundry-publish

  #      - name: Get tag
  #        run: echo "WORKBENCH_VERSION=$(git describe --tags --abbrev=0)" >> "$GITHUB_ENV"

  #      - name: Publish to Foundry VTT Repo
  #        id: publish_foundry_repo
  #        if: github.event_name == 'push' && (github.ref == 'refs/heads/main') && github.repository == 'xdy/xdy-pf2e-workbench'
  #        run: npx @ghost-fvtt/foundry-publish
  #        env:
  #          FVTT_MANIFEST_PATH: "static/module.json"
  #          FVTT_PACKAGE_ID: "xdy-pf2e-workbench"
  #          FVTT_USERNAME: ${{ secrets.FOUNDRY_ADMIN_USERNAME }}
  #          FVTT_PASSWORD: ${{ secrets.FOUNDRY_ADMIN_PASSWORD }}
  #          FVTT_MANIFEST_URL: https://github.com/${{github.repository}}/releases/download/${{github.event.release.tag_name}}/module.json
  #          FVTT_USE_NEW_PACKAGE_ADMINISTRATION_INTERFACE: true

  #      # Publish the release to FoundryVTT's package repository.
  #      - name: Publish Module to FoundryVTT Website
  #        uses: Varriount/fvtt-autopublish@v2.0.1
  #        with:
  #          username: ${{ secrets.FOUNDRY_ADMIN_USERNAME }}
  #          password: ${{ secrets.FOUNDRY_ADMIN_PASSWORD }}
  #          module-id: "xdy-pf2e-workbench"
  #          #manifest-url: https://github.com/${{ github.repository }}/releases/download/${{ env.RELEASE_NAME }}/module.json
  #          manifest-url: https://github.com/xdy/xdy-pf2e-workbench/releases/latest/download/module.json
  #          manifest-file: "static/module.json"



  #      # Publish to FoundryVTT
  #      - name: Publish to Foundry VTT Repo
  #        if: github.event_name == 'push' && (github.ref == 'refs/heads/main') && github.repository == 'xdy/xdy-pf2e-workbench'
  #        id: publish_foundry_repo
  #        run: npx @ghost-fvtt/foundry-publish
  #        env:
  #          FVTT_MANIFEST_PATH: "static/module.json"
  #          FVTT_PACKAGE_ID: "xdy-pf2e-workbench"
  #          FVTT_USERNAME: ${{ secrets.FOUNDRY_ADMIN_USERNAME }}
  #          FVTT_PASSWORD: ${{ secrets.FOUNDRY_ADMIN_PASSWORD }}
  #          FVTT_MANIFEST_URL: https://github.com/${{github.repository}}/releases/download/${{github.event.release.tag_name}}/module.json
  #          FVTT_USE_NEW_PACKAGE_ADMINISTRATION_INTERFACE: true

  publish:
    needs:
      - release
    runs-on: ubuntu-latest
    steps:
      - name: Write release version
        run: |
          TAG=${{ github.event.release.tag_name }}
          echo "VERSION=${TAG#v}" >> $GITHUB_ENV

          - name: Submit package to FoundryVTT Package Release API
            run: |
              curl -X POST "https://api.foundryvtt.com/e_api/packages/release_version/" \
                -H "Content-Type: application/json" \
                -H "Authorization: ${{ secrets.FOUNDRYVTT_RELEASE_TOKEN }}" \
                -d '{
                  "id": "xdy-pf2e-workbench",
                  "dry-run": false,
                  "release": {
                    "version": "${{ VERSION }}",
                    "manifest": "https://github.com/${{ github.repository }}/releases/latest/download/module.json",
                    "notes": "https://github.com/${{ github.repository }}/blob/master/CHANGELOG.md",
                    "compatibility": {
                      "minimum": "${{ env.fvtt_minimum }}",
                      "verified": "${{ env.fvtt_verified }}"
                    }
                  }
                }'
